import React, { useState } from 'react';
import { Button, Snackbar, UndoSnackbar } from '@DobruniaUI';

export const UndoSnackbarDemo: React.FC = () => {
  const [fileDeleteSnackbar, setFileDeleteSnackbar] = useState(false);
  const [itemsDeleteSnackbar, setItemsDeleteSnackbar] = useState(false);
  const [archiveSnackbar, setArchiveSnackbar] = useState(false);
  const [moveSnackbar, setMoveSnackbar] = useState(false);
  const [customSnackbar, setCustomSnackbar] = useState(false);

  // –û–±—ã—á–Ω—ã–µ snackbar'—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–∑–∏—Ü–∏—è–º–∏
  const [topRightSnackbar, setTopRightSnackbar] = useState(false);
  const [bottomCenterSnackbar, setBottomCenterSnackbar] = useState(false);
  const [topLeftSnackbar, setTopLeftSnackbar] = useState(false);
  const [bottomLeftSnackbar, setBottomLeftSnackbar] = useState(false);

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ undo —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
  const [deletedFile, setDeletedFile] = useState<string | null>(null);
  const [deletedItems, setDeletedItems] = useState<string[]>([]);
  const [archivedProject, setArchivedProject] = useState<string | null>(null);
  const [movedItems, setMovedItems] = useState<string[]>([]);
  const [customAction, setCustomAction] = useState<string | null>(null);

  const handleDeleteFile = () => {
    setDeletedFile('document.pdf');
    setFileDeleteSnackbar(true);
  };

  const handleUndoFileDelete = () => {
    console.log(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª: ${deletedFile}`);
    setDeletedFile(null);
  };

  const handleDeleteItems = () => {
    const items = ['photo1.jpg', 'photo2.jpg', 'photo3.jpg'];
    setDeletedItems(items);
    setItemsDeleteSnackbar(true);
  };

  const handleUndoItemsDelete = () => {
    console.log(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã:`, deletedItems);
    setDeletedItems([]);
  };

  const handleArchiveProject = () => {
    setArchivedProject('–ü—Ä–æ–µ–∫—Ç 2024');
    setArchiveSnackbar(true);
  };

  const handleUndoArchive = () => {
    console.log(`–ü—Ä–æ–µ–∫—Ç "${archivedProject}" –∏–∑–≤–ª–µ—á–µ–Ω –∏–∑ –∞—Ä—Ö–∏–≤–∞`);
    setArchivedProject(null);
  };

  const handleMoveToTrash = () => {
    const items = ['—Ñ–∞–π–ª1.doc', '—Ñ–∞–π–ª2.doc'];
    setMovedItems(items);
    setMoveSnackbar(true);
  };

  const handleUndoMove = () => {
    console.log(`–≠–ª–µ–º–µ–Ω—Ç—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã:`, movedItems);
    setMovedItems([]);
  };

  const handleCustomAction = () => {
    setCustomAction('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã');
    setCustomSnackbar(true);
  };

  const handleUndoCustom = () => {
    console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    setCustomAction(null);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö UndoSnackbar'–æ–≤ —Å—Ä–∞–∑—É (—Ç–µ—Å—Ç —Å—Ç–µ–∫–∏–Ω–≥–∞)
  const showAllUndoSnackbars = () => {
    setDeletedFile('test.pdf');
    setDeletedItems(['img1.jpg', 'img2.jpg']);
    setArchivedProject('Test Project');
    setMovedItems(['doc1.txt', 'doc2.txt']);
    setCustomAction('Test Action');

    setFileDeleteSnackbar(true);
    setTimeout(() => setItemsDeleteSnackbar(true), 500);
    setTimeout(() => setArchiveSnackbar(true), 1000);
    setTimeout(() => setMoveSnackbar(true), 1500);
    setTimeout(() => setCustomSnackbar(true), 2000);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ–±—ã—á–Ω—ã—Ö snackbar'–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö
  const showPositionSnackbars = () => {
    setTopRightSnackbar(true);
    setTimeout(() => setBottomCenterSnackbar(true), 500);
    setTimeout(() => setTopLeftSnackbar(true), 1000);
    setTimeout(() => setBottomLeftSnackbar(true), 1500);
  };

  const hideAllSnackbars = () => {
    // UndoSnackbar'—ã
    setFileDeleteSnackbar(false);
    setItemsDeleteSnackbar(false);
    setArchiveSnackbar(false);
    setMoveSnackbar(false);
    setCustomSnackbar(false);

    // –û–±—ã—á–Ω—ã–µ snackbar'—ã
    setTopRightSnackbar(false);
    setBottomCenterSnackbar(false);
    setTopLeftSnackbar(false);
    setBottomLeftSnackbar(false);
  };

  return (
    <div style={{ padding: '32px', fontFamily: 'var(--font-family)' }}>
      <h1 style={{ color: 'var(--c-text-primary)', marginBottom: '24px' }}>
        Snackbar Demo (—Å—Ç–µ–∫–∏–Ω–≥ –≤—Å—Ç—Ä–æ–µ–Ω –≤ –±–∞–∑–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç)
      </h1>

      <div
        style={{
          display: 'grid',
          gap: '24px',
          maxWidth: '800px',
        }}
      >
        {/* –¢–µ—Å—Ç —Å—Ç–µ–∫–∏–Ω–≥–∞ UndoSnackbar'–æ–≤ */}
        <div
          style={{
            padding: '24px',
            border: '2px solid var(--c-accent)',
            borderRadius: 'var(--radius-medium)',
            backgroundColor: 'var(--c-bg-default)',
          }}
        >
          <h3 style={{ color: 'var(--c-text-primary)', marginBottom: '16px' }}>
            üß™ –¢–µ—Å—Ç —Å—Ç–µ–∫–∏–Ω–≥–∞ UndoSnackbar'–æ–≤ (—Å–ø—Ä–∞–≤–∞ —Å–≤–µ—Ä—Ö—É)
          </h3>
          <p style={{ color: 'var(--c-text-primary)', marginBottom: '16px' }}>
            UndoSnackbar'—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç <code>enableStacking=true</code> –∏ –ø–æ–∑–∏—Ü–∏—é{' '}
            <code>top-right</code>.
            <br />
            <strong>–ì–ª–∞–≤–Ω–æ–µ:</strong> –ö–æ–≥–¥–∞ –≤—ã –∑–∞–∫—Ä—ã–≤–∞–µ—Ç–µ –æ–¥–∏–Ω –∏–∑ snackbar'–æ–≤ –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ —Å—Ç–µ–∫–∞,
            –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ "–ø–æ–¥—Ç—è–≥–∏–≤–∞—é—Ç—Å—è" –≤–≤–µ—Ä—Ö!
          </p>
          <div style={{ display: 'flex', gap: '16px', flexWrap: 'wrap' }}>
            <Button onClick={showAllUndoSnackbars}>–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ UndoSnackbar'—ã</Button>
            <Button variant='secondary' onClick={hideAllSnackbars}>
              –°–∫—Ä—ã—Ç—å –≤—Å–µ
            </Button>
          </div>
        </div>

        {/* –¢–µ—Å—Ç —Å—Ç–µ–∫–∏–Ω–≥–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö */}
        <div
          style={{
            padding: '24px',
            border: '2px solid var(--c-accent)',
            borderRadius: 'var(--radius-medium)',
            backgroundColor: 'var(--c-bg-default)',
          }}
        >
          <h3 style={{ color: 'var(--c-text-primary)', marginBottom: '16px' }}>
            üéØ –¢–µ—Å—Ç —Å—Ç–µ–∫–∏–Ω–≥–∞ –ø–æ –ø–æ–∑–∏—Ü–∏—è–º
          </h3>
          <p style={{ color: 'var(--c-text-primary)', marginBottom: '16px' }}>
            –û–±—ã—á–Ω—ã–µ Snackbar'—ã —Å <code>enableStacking=true</code> –≤ —Ä–∞–∑–Ω—ã—Ö —É–≥–ª–∞—Ö —ç–∫—Ä–∞–Ω–∞.
            <br />
            –ö–∞–∂–¥–∞—è –ø–æ–∑–∏—Ü–∏—è –∏–º–µ–µ—Ç —Å–≤–æ–π –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π —Å—Ç–µ–∫!
          </p>
          <div style={{ display: 'flex', gap: '16px', flexWrap: 'wrap' }}>
            <Button onClick={showPositionSnackbars} variant='primary'>
              –ü–æ–∫–∞–∑–∞—Ç—å –≤–æ –≤—Å–µ—Ö —É–≥–ª–∞—Ö
            </Button>
            <Button variant='secondary' onClick={hideAllSnackbars}>
              –°–∫—Ä—ã—Ç—å –≤—Å–µ
            </Button>
          </div>
          <div
            style={{
              marginTop: '16px',
              padding: '12px',
              backgroundColor: 'var(--c-bg-subtle)',
              borderRadius: 'var(--radius-small)',
              fontSize: 'var(--font-size-small)',
              color: 'var(--c-text-secondary)',
            }}
          >
            üí° <strong>–ü–æ–∑–∏—Ü–∏–∏:</strong> –°–ø—Ä–∞–≤–∞ —Å–≤–µ—Ä—Ö—É, –°–Ω–∏–∑—É –ø–æ —Ü–µ–Ω—Ç—Ä—É, –°–ª–µ–≤–∞ —Å–≤–µ—Ä—Ö—É, –°–ª–µ–≤–∞ —Å–Ω–∏–∑—É
          </div>
        </div>

        {/* –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã */}
        <div
          style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
            gap: '16px',
          }}
        >
          <Button onClick={handleDeleteFile} variant='secondary'>
            1Ô∏è‚É£ –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª
          </Button>
          <Button onClick={handleDeleteItems} variant='secondary'>
            2Ô∏è‚É£ –£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ
          </Button>
          <Button onClick={handleArchiveProject} variant='secondary'>
            3Ô∏è‚É£ –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å
          </Button>
          <Button onClick={handleMoveToTrash} variant='secondary'>
            4Ô∏è‚É£ –í –∫–æ—Ä–∑–∏–Ω—É
          </Button>
          <Button onClick={handleCustomAction} variant='secondary'>
            5Ô∏è‚É£ –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </Button>
        </div>

        {/* –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã */}
        <details
          style={{
            border: '1px solid var(--c-border)',
            borderRadius: 'var(--radius-medium)',
            padding: '16px',
          }}
        >
          <summary style={{ cursor: 'pointer', fontWeight: 'bold', marginBottom: '16px' }}>
            –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
          </summary>

          <div style={{ display: 'grid', gap: '16px' }}>
            <div
              style={{
                padding: '16px',
                border: '1px solid var(--c-border)',
                borderRadius: 'var(--radius-small)',
              }}
            >
              <h4 style={{ color: 'var(--c-text-primary)', marginBottom: '8px' }}>
                –ù–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
              </h4>
              <p
                style={{
                  color: 'var(--c-text-primary)',
                  marginBottom: '12px',
                  fontSize: 'var(--font-size-small)',
                }}
              >
                –°—Ç–µ–∫–∏–Ω–≥ —Ç–µ–ø–µ—Ä—å –≤—Å—Ç—Ä–æ–µ–Ω –≤ –±–∞–∑–æ–≤—ã–π Snackbar —á–µ—Ä–µ–∑ –ø—Ä–æ–ø—Å <code>enableStacking</code>.
                UndoSnackbar –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
              </p>
            </div>

            <div
              style={{
                padding: '16px',
                border: '1px solid var(--c-border)',
                borderRadius: 'var(--radius-small)',
              }}
            >
              <h4 style={{ color: 'var(--c-text-primary)', marginBottom: '8px' }}>
                –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–æ–∑–∏—Ü–∏—è–º
              </h4>
              <p
                style={{
                  color: 'var(--c-text-primary)',
                  marginBottom: '12px',
                  fontSize: 'var(--font-size-small)',
                }}
              >
                Snackbar'—ã –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ –ø–æ–∑–∏—Ü–∏–∏ (top-right, bottom-center, etc.). –ö–∞–∂–¥–∞—è –≥—Ä—É–ø–ø–∞
                –∏–º–µ–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π —Å—Ç–µ–∫.
              </p>
            </div>
          </div>
        </details>
      </div>

      {/* UndoSnackbar –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã */}
      <UndoSnackbar
        open={fileDeleteSnackbar}
        message={`–§–∞–π–ª "${deletedFile}" —É–¥–∞–ª–µ–Ω`}
        onClose={() => setFileDeleteSnackbar(false)}
        onUndo={handleUndoFileDelete}
      />

      <UndoSnackbar
        open={itemsDeleteSnackbar}
        message={`${deletedItems.length} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —É–¥–∞–ª–µ–Ω—ã`}
        onClose={() => setItemsDeleteSnackbar(false)}
        onUndo={handleUndoItemsDelete}
        undoText='–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'
      />

      <UndoSnackbar
        open={archiveSnackbar}
        message={`–ü—Ä–æ–µ–∫—Ç "${archivedProject}" –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω`}
        onClose={() => setArchiveSnackbar(false)}
        onUndo={handleUndoArchive}
        undoText='–ò–∑–≤–ª–µ—á—å'
      />

      <UndoSnackbar
        open={moveSnackbar}
        message={`${movedItems.length} —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ –∫–æ—Ä–∑–∏–Ω—É`}
        onClose={() => setMoveSnackbar(false)}
        onUndo={handleUndoMove}
        autoHideDuration={8000}
        undoText='–í–µ—Ä–Ω—É—Ç—å'
      />

      <UndoSnackbar
        open={customSnackbar}
        message={customAction}
        onClose={() => setCustomSnackbar(false)}
        onUndo={handleUndoCustom}
        autoHideDuration={0}
        undoText='–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'
      />

      {/* –û–±—ã—á–Ω—ã–µ Snackbar –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç–µ–∫–∏–Ω–≥–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö */}
      <Snackbar
        open={topRightSnackbar}
        message='–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∞ —Å–≤–µ—Ä—Ö—É'
        onClose={() => setTopRightSnackbar(false)}
        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}
        enableStacking={true}
        action={<Button variant='ghost'>–î–µ–π—Å—Ç–≤–∏–µ</Button>}
      />

      <Snackbar
        open={bottomCenterSnackbar}
        message='–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–Ω–∏–∑—É –ø–æ —Ü–µ–Ω—Ç—Ä—É'
        onClose={() => setBottomCenterSnackbar(false)}
        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}
        enableStacking={true}
      />

      <Snackbar
        open={topLeftSnackbar}
        message='–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–ª–µ–≤–∞ —Å–≤–µ—Ä—Ö—É'
        onClose={() => setTopLeftSnackbar(false)}
        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}
        enableStacking={true}
      />

      <Snackbar
        open={bottomLeftSnackbar}
        message='–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–ª–µ–≤–∞ —Å–Ω–∏–∑—É'
        onClose={() => setBottomLeftSnackbar(false)}
        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}
        enableStacking={true}
      />
    </div>
  );
};
