name: Release

on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ github.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests and build
        run: |
          yarn lint
          yarn build

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        run: |
          yarn version --${{ github.event.inputs.version-type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit and push version bump
        run: |
          git add package.json
          git commit -m "chore: release v$NEW_VERSION"
          git push origin main

      - name: Create and push tag
        run: |
          git tag v$NEW_VERSION
          git push origin v$NEW_VERSION

      - name: Publish to NPM
        run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body: |
            üöÄ **DobruniaUI v${{ env.NEW_VERSION }}**

            –ù–æ–≤—ã–π —Ä–µ–ª–∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.

            ### üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞
            ```bash
            npm install dobruniaui@${{ env.NEW_VERSION }}
            # –∏–ª–∏
            yarn add dobruniaui@${{ env.NEW_VERSION }}
            ```
          draft: false
          prerelease: false
